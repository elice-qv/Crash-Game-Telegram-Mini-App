const WebSocket = require('ws');

const ws = new WebSocket('ws://localhost:4001');

ws.on('open', () => {
  console.log('‚úÖ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
  ws.send(JSON.stringify({
    type: 'auth',
    initData: '' // DEV —Ä–µ–∂–∏–º
  }));
});

ws.on('message', (data) => {
  const message = JSON.parse(data.toString());
  console.log('üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:', message.type);
  
  if (message.type === 'auth-success') {
    console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, –±–∞–ª–∞–Ω—Å:', message.user.balance);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞–≤–∫—É
    setTimeout(() => {
      console.log('üí∞ –î–µ–ª–∞–µ–º —Å—Ç–∞–≤–∫—É 10...');
      ws.send(JSON.stringify({
        type: 'bet',
        bet: 10
      }));
    }, 1000);
  }
  
  if (message.type === 'balance-update') {
    console.log('üí∞ –ë–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª–µ–Ω:', message.balance);
  }
  
  if (message.type === 'game-start') {
    console.log('üéÆ –ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å, —Ñ–∞–∑–∞ —Å—Ç–∞–≤–æ–∫');
  }
  
  if (message.type === 'game-flying') {
    console.log('üöÄ –§–∞–∑–∞ –ø–æ–ª–µ—Ç–∞, –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å cashout');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º cashout —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
      console.log('üí∏ –î–µ–ª–∞–µ–º cashout...');
      ws.send(JSON.stringify({
        type: 'cashout'
      }));
    }, 5000);
  }
  
  if (message.type === 'game-crash') {
    console.log('üí• –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    ws.close();
  }
});

ws.on('error', (error) => {
  console.error('‚ùå WebSocket –æ—à–∏–±–∫–∞:', error.message);
});

ws.on('close', () => {
  console.log('üîå WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ');
  process.exit(0);
});

// –¢–∞–π–º–∞—É—Ç –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–π–¥–µ—Ç –Ω–µ —Ç–∞–∫
setTimeout(() => {
  console.log('‚è∞ –¢–∞–π–º–∞—É—Ç, –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ');
  ws.close();
  process.exit(1);
}, 30000); 