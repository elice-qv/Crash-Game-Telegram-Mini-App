import { useStore } from "@/lib/store";
import { useEffect, useRef, useState } from "react";

// –ê—Å—Å–µ—Ç—ã
const ROCKET_IMG = "/assets/rocket.png";
const CLOUD_IMG = "/assets/cloud.svg";
const EXPLOSION_IMG = "/assets/explosion.png";
const PLANET1_IMG = "/assets/planet1.png";
const PLANET2_IMG = "/assets/planet2.png";

// –ó–≤—É–∫–∏ (–∑–∞–≥–ª—É—à–∫–∏, —Ñ–∞–π–ª—ã –ø–æ–ª–æ–∂–∏—Ç—å –≤ /public/sounds/)
const SOUND_LAUNCH = "/sounds/launch.mp3";
const SOUND_FLY = "/sounds/fly.mp3";
const SOUND_EXPLOSION = "/sounds/explosion.mp3";
const SOUND_CASHOUT = "/sounds/cashout.mp3";
const SOUND_CLICK = "/sounds/click.mp3";

// –§–∞–∑—ã –∏–≥—Ä—ã
const PHASES = {
  BETTING: "betting",
  FLYING: "flying",
  CRASHED: "crashed",
};

// –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ Canvas
const MIN_HEIGHT = 400;

export default function CrashGameBlock() {
  const { user, balance } = useStore();
  const canvasRef = useRef<HTMLCanvasElement>(null);
  const [phase, setPhase] = useState("betting");
  const [multiplier, setMultiplier] = useState(1.0);
  const [timer, setTimer] = useState(0); // ms –¥–æ –∫–æ–Ω—Ü–∞ betting
  const [wsConnected, setWsConnected] = useState(false);
  const [profile, setProfile] = useState(user);
  const [currentBalance, setCurrentBalance] = useState(balance);

  // TODO: ws-–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ, –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–∑, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
  // TODO: Canvas-—Ä–µ–Ω–¥–µ—Ä, –∞–Ω–∏–º–∞—Ü–∏–∏, —ç—Ñ—Ñ–µ–∫—Ç—ã, –∞—Å—Å–µ—Ç—ã
  // TODO: UI —Å—Ç–∞–≤–æ–∫, –∫–Ω–æ–ø–∫–∏, —Ç–∞–π–º–µ—Ä, cashout
  // TODO: –ó–≤—É–∫–∏

  // –ó–∞–≥–ª—É—à–∫–∞: canvas —Ä–µ–Ω–¥–µ—Ä
  useEffect(() => {
    const canvas = canvasRef.current;
    if (!canvas) return;
    const ctx = canvas.getContext("2d");
    if (!ctx) return;
    // –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π —Ä–∞–∑–º–µ—Ä
    const dpr = window.devicePixelRatio || 1;
    const width = canvas.parentElement?.clientWidth || 800;
    const height = Math.max(
      Math.round(width * 0.56),
      MIN_HEIGHT
    );
    canvas.width = width * dpr;
    canvas.height = height * dpr;
    canvas.style.width = width + "px";
    canvas.style.height = height + "px";
    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);
    // –§–æ–Ω
    ctx.clearRect(0, 0, width, height);
    if (phase === PHASES.BETTING) {
      // –ì—Ä–∞–¥–∏–µ–Ω—Ç –Ω–µ–±–æ
      const grad = ctx.createLinearGradient(0, 0, 0, height);
      grad.addColorStop(0, "#7ecbff");
      grad.addColorStop(1, "#fff");
      ctx.fillStyle = grad;
      ctx.fillRect(0, 0, width, height);
      // TODO: –æ–±–ª–∞–∫–∞, –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, —Ä–∞–∫–µ—Ç–∞, –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç
    } else {
      // –ö–æ—Å–º–æ—Å
      const grad = ctx.createLinearGradient(0, 0, 0, height);
      grad.addColorStop(0, "#0a1833");
      grad.addColorStop(1, "#1e1e1e");
      ctx.fillStyle = grad;
      ctx.fillRect(0, 0, width, height);
      // TODO: –∑–≤—ë–∑–¥—ã, –ø–ª–∞–Ω–µ—Ç—ã, —Ä–∞–∫–µ—Ç–∞, –≤–∑—Ä—ã–≤, –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç
    }
    // TODO: –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ø–æ —Ü–µ–Ω—Ç—Ä—É
  }, [phase]);

  // TODO: ws-–ª–æ–≥–∏–∫–∞, –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–∑, —Ç–∞–π–º–µ—Ä, multiplier

  return (
    <div className="w-full max-w-3xl mx-auto flex flex-col bg-[#1E1E1E] rounded-xl shadow-lg overflow-hidden" style={{ minHeight: MIN_HEIGHT + 200 }}>
      {/* –®–∞–ø–∫–∞ */}
      <div className="flex items-center justify-between px-4 py-3 border-b border-gray-800 bg-[#23272F]">
        <div className="flex items-center gap-2">
          <span className="text-lg font-bold text-white">üöÄ Crash</span>
          <span className={`w-3 h-3 rounded-full ml-2 ${wsConnected ? 'bg-green-500' : 'bg-red-500'}`}></span>
        </div>
        <div className="text-xl font-mono font-bold text-yellow-400">{currentBalance.toFixed(2)}</div>
        <div className="flex items-center gap-2">
          {profile?.avatarUrl && (
            <img src={profile.avatarUrl} alt="avatar" className="w-8 h-8 rounded-full border border-gray-600" />
          )}
          <span className="text-white font-medium">{profile?.username || profile?.name}</span>
        </div>
      </div>
      {/* Canvas */}
      <div className="flex-1 flex items-center justify-center bg-black">
        <canvas ref={canvasRef} className="w-full h-full block" style={{ minHeight: MIN_HEIGHT }} />
      </div>
      {/* –ë–ª–æ–∫ —Å—Ç–∞–≤–æ–∫ –∏ UI */}
      <div className="p-4 bg-[#23272F] border-t border-gray-800">
        {/* TODO: –±—ã—Å—Ç—Ä—ã–µ —Å—Ç–∞–≤–∫–∏, –≤–≤–æ–¥, x2, MAX, cashout, —Ç–∞–π–º–µ—Ä, —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ —Ñ–∞–∑–∞–º */}
        <div className="text-center text-white opacity-60">–ë–ª–æ–∫ —Å—Ç–∞–≤–æ–∫ –∏ UI ‚Äî –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</div>
      </div>
    </div>
  );
} 