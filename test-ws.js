const WebSocket = require('ws');

// –¢–µ—Å—Ç–æ–≤—ã–π WebSocket –∫–ª–∏–µ–Ω—Ç
function testWebSocket() {
  console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WebSocket —Å–µ—Ä–≤–µ—Ä—É...');
  
  const ws = new WebSocket('ws://localhost:4001');
  
  ws.on('open', () => {
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –¢–µ—Å—Ç–æ–≤–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    ws.send(JSON.stringify({
      type: 'auth',
      initData: 'test-data'
    }));
  });
  
  ws.on('message', (data) => {
    try {
      const message = JSON.parse(data);
      console.log('üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:', message.type);
      
      if (message.type === 'auth-success') {
        console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
        
        // –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
          console.log('üí∞ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç–∞–≤–∫—É...');
          ws.send(JSON.stringify({
            type: 'bet',
            bet: 100
          }));
        }, 2000);
      }
      
      if (message.type === 'balance-update') {
        console.log('üí∞ –ë–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª–µ–Ω:', message.balance);
      }
      
      if (message.type === 'game-start') {
        console.log('üéÆ –ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å, seed:', message.seed);
      }
      
      if (message.type === 'game-flying') {
        console.log('üöÄ –§–∞–∑–∞ –ø–æ–ª–µ—Ç–∞, crashPoint:', message.crashPoint);
      }
      
      if (message.type === 'game-crash') {
        console.log('üí• –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', message.crashPoint);
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞
        setTimeout(() => {
          console.log('üîå –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ');
          ws.close();
        }, 1000);
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    }
  });
  
  ws.on('close', () => {
    console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ');
    process.exit(0);
  });
  
  ws.on('error', (error) => {
    console.error('‚ùå WebSocket –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  });
  
  // –¢–∞–π–º–∞—É—Ç –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç
  setTimeout(() => {
    console.log('‚è∞ –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è');
    process.exit(1);
  }, 10000);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
if (require.main === module) {
  testWebSocket();
}

module.exports = { testWebSocket }; 