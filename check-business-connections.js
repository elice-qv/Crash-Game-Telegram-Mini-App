#!/usr/bin/env node

// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Business Connections
// –ó–∞–ø—É—Å–∫: node check-business-connections.js

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
const fs = require('fs')
const path = require('path')

function loadEnv() {
  const envPath = path.join(__dirname, '.env')
  if (fs.existsSync(envPath)) {
    const envContent = fs.readFileSync(envPath, 'utf8')
    envContent.split('\n').forEach(line => {
      const [key, value] = line.split('=')
      if (key && value) {
        process.env[key.trim()] = value.trim()
      }
    })
  }
}

loadEnv()

const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN

if (!BOT_TOKEN) {
  console.error('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env')
  process.exit(1)
}

async function checkBusinessConnections() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º Business Connections...')
  console.log(`ü§ñ Bot Token: ${BOT_TOKEN.substring(0, 10)}...`)
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    console.log('\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:')
    const botInfo = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/getMe`)
    const botData = await botInfo.json()
    
    if (botData.ok) {
      console.log(`‚úÖ –ë–æ—Ç: @${botData.result.username}`)
      console.log(`‚úÖ ID: ${botData.result.id}`)
      console.log(`‚úÖ –ò–º—è: ${botData.result.first_name}`)
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ: ${botData.description}`)
      return
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Business Connections
    console.log('\nüîó –ü—Ä–æ–≤–µ—Ä—è–µ–º Business Connections:')
    const connectionsResponse = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/getBusinessConnections`)
    const connectionsData = await connectionsResponse.json()
    
    if (connectionsData.ok) {
      if (connectionsData.result && connectionsData.result.length > 0) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω—ã Business Connections:')
        connectionsData.result.forEach((connection, index) => {
          console.log(`\n${index + 1}. Business Connection:`)
          console.log(`   ID: ${connection.id}`)
          console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${connection.user.first_name} (@${connection.user.username})`)
          console.log(`   –î–∞—Ç–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ${new Date(connection.date * 1000).toLocaleString()}`)
          console.log(`   –ú–æ–∂–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å: ${connection.can_reply}`)
          console.log(`   –ê–∫—Ç–∏–≤–Ω–∞: ${connection.is_enabled}`)
        })
        
        console.log('\nüìù –î–æ–±–∞–≤—å—Ç–µ –≤ .env:')
        console.log(`TELEGRAM_BUSINESS_CONNECTION_ID=${connectionsData.result[0].id}`)
      } else {
        console.log('‚ùå Business Connections –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
        console.log('\nüìã –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Business Connection:')
        console.log('1. –°–æ–∑–¥–∞–π—Ç–µ Business Account –≤ Telegram')
        console.log('2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Settings ‚Üí Business ‚Üí Bots')
        console.log('3. –ù–∞–∂–º–∏—Ç–µ "Add Bot" –∏ –Ω–∞–π–¥–∏—Ç–µ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞')
        console.log('4. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ')
        console.log('5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞')
      }
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è Business Connections: ${connectionsData.description}`)
      
      if (connectionsData.error_code === 404) {
        console.log('\nüí° –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ:')
        console.log('- –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ Business Account')
        console.log('- –ò–ª–∏ Business Account –Ω–µ —Å–æ–∑–¥–∞–Ω')
        console.log('- –ò–ª–∏ —É –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ Business Connections')
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞
    console.log('\nüîê –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞:')
    const botCommands = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/getMyCommands`)
    const commandsData = await botCommands.json()
    
    if (commandsData.ok) {
      console.log('‚úÖ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –ø–æ–ª—É—á–µ–Ω—ã')
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥: ${commandsData.description}`)
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message)
  }
}

checkBusinessConnections() 